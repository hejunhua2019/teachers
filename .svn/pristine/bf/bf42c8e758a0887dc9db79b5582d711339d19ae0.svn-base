<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 数据访问接口映射文件 对应一个dao数据访问接口类 -->
<mapper namespace="user">
	<!--   
	    返回的数据映射   
	        type：代表是要映射的对象  
	        id：代表唯一(过会我们要拿到它)  
	-->  
	<resultMap type="user" id="userMap">  
	    <!--   
	        column:对应的列名  
	        property:对应的属性名  
	     -->  
	    <id column="pk_NVU_ID" property="id"  />
	    <result column="ACCOUNT" property="account" />
	    <result column="PASSWORD" property="password" />
	    <result column="TOKEN" property="token" />
	    <result column="TYPE" property="type" />
	    <result column="CREATEDATE" property="createDate" />
	    <result column="MODIFYDATE" property="modifyDate" />
	    <result column="ISDELETED" property="isDeleted" />
	    <result column="DELETEDATE" property="deleteDate" />
	    <result column="LASTOPERATOR" property="lastOperator" />
	</resultMap> 

	<!-- add -->
	<insert id="add" parameterType="user" useGeneratedKeys="true" keyProperty="id">
		insert into nonstandard_vehicle_t_user(
			ACCOUNT,PASSWORD,TOKEN,TYPE,ISDELETED,CREATEDATE,MODIFYDATE,LASTOPERATOR) 
		values(
			#{account},#{password},#{token},#{type},'0',sysdate(),sysdate(),#{lastOperator}
		)
	</insert>
	<!-- batch add -->
	<insert id="addBatch">
  	  	insert into nonstandard_vehicle_t_user (ACCOUNT,PASSWORD,TOKEN,TYPE,ISDELETED,CREATEDATE,LASTOPERATOR) values
	    <foreach collection="list" item="item" index="index" separator=",">
		      (
		      #{item.account},#{item.password},#{item.token},#{item.type},'0',sysdate(),#{item.lastOperator}
		      )
		</foreach>
	</insert>
	<!-- delete -->
	<delete id="delete">
		delete from nonstandard_vehicle_t_user where pk_NVU_ID = #{id}
	</delete>
	<update id="deleteUpdate" parameterType="user">
		update nonstandard_vehicle_t_user set ISDELETED='1',DELETEDATE=sysdate(),LASTOPERATOR=#{lastOperator} where pk_NVU_ID = #{id}
	</update>
	<delete id="deleteAll">
		delete from nonstandard_vehicle_t_user where pk_NVU_ID in
		<foreach collection="list" item="item" separator="," open="(" close=")">
			#{item}
		</foreach>
	</delete>	
	<update id="deleteUpdateAll">
		update nonstandard_vehicle_t_user set ISDELETED='1',DELETEDATE=sysdate(),LASTOPERATOR=#{uid} where pk_NVU_ID in
		<foreach collection="ids" item="item" separator="," open="(" close=")">
		#{item}
		</foreach>
	</update>
	<!-- update -->
	<update id="update" parameterType="user">
		update nonstandard_vehicle_t_user
		<set>
			MODIFYDATE = sysdate(),
			LASTOPERATOR = #{lastOperator},
			<if test="account != null">
				ACCOUNT=#{account},
			</if>
			<if test="password != null">
				PASSWORD=#{password},
			</if>
			<if test="token != null">
				TOKEN=#{token},
			</if>
			<if test="type != null">
				TYPE=#{type},
			</if>
		</set>
		where pk_NVU_ID = #{id}
	</update>
	
	<!-- query -->
	<select id="find" parameterType="user" resultMap="userMap">
		select * from nonstandard_vehicle_t_user 
		<where>
			ISDELETED = '0'
			<if test="id != null">
				and pk_NVU_ID=#{id}
			</if>
			<if test="account != null">
				and ACCOUNT=#{account}
			</if>
		</where>
		order by pk_NVU_ID asc limit #{start},#{size}
	</select>
	<select id="findIds" parameterType="user" resultType="long">
		select pk_NVU_ID from nonstandard_vehicle_t_user 
		<where>
			ISDELETED = '0'
			<if test="id != null">
				and pk_NVU_ID=#{id}
			</if>
			<if test="account != null">
				and ACCOUNT=#{account}
			</if>
		</where>
		order by pk_NVU_ID asc limit #{start},#{size}
	</select>
	<select id="batchFindByIds" resultMap="userMap">
		select * from nonstandard_vehicle_t_user where pk_NVU_ID in
		<foreach collection="list" item="item" separator="," open="(" close=")">
			#{item}
		</foreach>
	</select>
	<select id="findById" resultMap="userMap">
		select * from nonstandard_vehicle_t_user where pk_NVU_ID=#{id}
	</select>
	<select id="listPage" parameterType="user" resultMap="userMap">
		select * from nonstandard_vehicle_t_user 
		<where>
			ISDELETED = '0'
			<if test="account != null and account != ''">
				and ACCOUNT like #{account}
			</if>
		</where>
		order by pk_NVU_ID desc
	</select>
</mapper>
